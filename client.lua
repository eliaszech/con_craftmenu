---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Concado.
--- DateTime: 05.10.2021 09:27
---

local ESX = nil
local menuOpen = false
local menuInitialized = false

local craftingInProgress = false
local craftingCanceled = false
local craftDuration = 0
local elapsedTime = 0
local prevElapsedTime = -1

local ped = nil

-- Get ESX Object
Citizen.CreateThread(function()
    while ESX == nil do
        TriggerEvent('esx:getSharedObject', function(obj) ESX = obj end)
        Citizen.Wait(1)
    end

    for key, table in pairs(Config.Tables) do
        local blip = AddBlipForCoord(table.x, table.y, table.z)
        SetBlipSprite(blip, Config.BlipSprite)
        SetBlipDisplay(blip, 2)
        SetBlipScale(blip, Config.BlipScale)
        SetBlipColour(blip, Config.BlipColor)
        SetBlipAsShortRange(blip, false)
        BeginTextCommandSetBlipName("STRING")
        AddTextComponentString(Config.BlipName)
        EndTextCommandSetBlipName(blip)
    end
end)

local isWithinCraftingTableRange = false
local currentCRaftingTable = nil
Citizen.CreateThread(function()
    while true do
        ped = PlayerPedId()
        local x, y, z = table.unpack(GetEntityCoords(ped, true))

        for key, table in pairs(Config.Tables) do
            if GetDistanceBetweenCoords(x, y, z, table.x, table.y, table.z, true) <= Config.MaxDistanceFromTable then
                isWithinCraftingTableRange = true
                currentCRaftingTable = value
                DisplayPrompt("Drücke ~g~[E] ~s~um das Herstellungsmenü zu öffnen")
                do break end
            end
            isWithinCraftingTableRange = false
        end

        if IsControlJustReleased(0, Config.MenuOpenKey) then
            if isWithinCraftingTableRange then
                menuOpen = true
                ToggleGui(true)
            end
        end

        if IsControlJustReleased(0, 73) then
            if craftingInProgress then
                craftingCanceled = true
            end
        end

        Citizen.Wait(1)
    end
end)

RegisterNUICallback('closeMenu', function()
    menuOpen = false
    ToggleGui(false)
end)

RegisterNUICallback('cancelCraft', function(data)
    craftingCanceled = true
    SendNUIMessage({
        type = 'reloadui',
        item = data.item,
        categories = Config.Categories,
        recipes = PrepareRecipes(Config.Recipes)
    })
end)

RegisterNUICallback('craftItem', function(data)
    CraftItem(GetRecipeByIdentifier(data.item), data.amount)
end)

function GetRecipeByIdentifier(identifier)
    for key, recipe in pairs(Config.Recipes) do
        if recipe.Identifier == identifier then
            return recipe
        end
    end
    return nil
end

function CraftItem(item, amount)
    Citizen.CreateThread(function()
        local time = item.CraftDuration

        if time > 0 then
            local animDict = "amb@world_human_hammering@male@base"
            local anim = "base"

            RequestAnimDict(animDict)
            while not HasAnimDictLoaded(animDict) do Citizen.Wait(1) end

            craftingInProgress = true
            craftDuration = time

            ClearPedTasksImmediately(ped)
            TaskPlayAnim(ped, animDict, anim, 8.0, -8.0, craftDuration * 1000, 1, 1, true, true, true)
            WaitForTimer(craftDuration)
            ClearPedTasksImmediately(ped)

            craftingInProgress = false
            prevElapsedTime = -1
            elapsedTime = 0

            if craftingCanceled then
                Citizen.Trace('crafting canceled')
                craftingCanceled = false
                do return end
            end
        end

        TriggerServerEvent('con:craftItem', item, amount)
        Citizen.Wait(500)
        SendNUIMessage({
            type = 'reloadui',
            item = item.Identifier,
            categories = Config.Categories,
            recipes = PrepareRecipes(Config.Recipes)
        })
    end)
end

function ToggleGui(state)
    SetNuiFocus(state, state)
    if not menuInitialized then
        SendNUIMessage({
            type = 'setTitle',
            title = Config.MenuTitle
        })
        menuInitialized = true
    end

    SendNUIMessage({
        type = 'enableui',
        enable = state,
        isCrafting = craftingInProgress,
        categories = Config.Categories,
        recipes = PrepareRecipes(Config.Recipes)
    })
end

function WaitForTimer(duration)
    for i = 0,duration - 1,1 do
        Citizen.Trace('timed')
        if craftingCanceled then
            do break end
        end

        elapsedTime = elapsedTime + 1
        Citizen.Wait(1000)
    end
end

Citizen.CreateThread(function()
    while true do
        if craftingInProgress and not craftingCanceled then
            if elapsedTime > prevElapsedTime or prevElapsedTime == -1 then
                Citizen.Trace('update ui')
                SendNUIMessage({
                    type = 'updateTimer',
                    time = craftDuration,
                    elapsed = elapsedTime
                })
                prevElapsedTime = elapsedTime
            end
        end
        Citizen.Wait(100)
    end
end)

-- This sets the amount of items the player has
function PrepareRecipes(data)
    local playerInventory = ESX.GetPlayerData().inventory

    for key, recipe in pairs(data) do
        if Config.UseImageFolder then
            data[key].DefaultImage = Config.ImageFolder .. '/' .. recipe.Identifier .. '.png'
        end

        for keyi, item in pairs(data[key]['Ingredients']) do
            local invItem = nil
            for keyp, esxItem in pairs(playerInventory) do
                if esxItem.name == item.Identifier then
                    invItem = esxItem
                    break
                end
            end

            if invItem == nil then
                data[key]['Ingredients'][keyi].Has = 0
            else
                data[key]['Ingredients'][keyi].Has = invItem.count
            end
        end
    end
    return data
end

function DisplayPrompt(x, y, z, text)
    local px, py, pz = table.unpack(GetEntityCoords(ped))
    local dist = GetDistanceBetweenCoords(px, py, pz, x, y, z, true)

    if dist <= Config.MaxDistanceFromTable + 3 then
        BeginTextCommandDisplayHelp("STRING")
        AddTextComponentString(text)
        EndTextCommandDisplayHelp(0, 0, 1, -1)
    end
end